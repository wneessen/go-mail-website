<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Willkommen in der go-mail-Dokumentation on go-mail</title><link>https://go-mail.dev/de/</link><description>Recent content in Willkommen in der go-mail-Dokumentation on go-mail</description><generator>Hugo -- gohugo.io</generator><language>de</language><atom:link href="https://go-mail.dev/de/index.xml" rel="self" type="application/rss+xml"/><item><title>Einführung</title><link>https://go-mail.dev/de/getting-started/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/de/getting-started/introduction/</guid><description>&lt;p>Diese kurze Anleitung zeigt dir, wie du go-mail von der Installation bis zum Versand deiner ersten Mail nutzen kannst.&lt;/p></description></item><item><title>Beispiel für Massenmailer</title><link>https://go-mail.dev/de/examples/bulk-mailer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/de/examples/bulk-mailer/</guid><description>In diesem Beispiel erstellen wir einen kleinen Massenversender, um die gleiche Mail an eine größere Liste von Empfängern zu versenden. Für uns ist es wichtig, den Empfänger in der Mail direkt anzusprechen. Deshalb werden wir das html/template und text/template System von Go zusammen mit Platzhaltern verwenden.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 package main import ( &amp;#34;fmt&amp;#34; ht &amp;#34;html/template&amp;#34; &amp;#34;log&amp;#34; &amp;#34;math/rand&amp;#34; &amp;#34;os&amp;#34; tt &amp;#34;text/template&amp;#34; &amp;#34;time&amp;#34; &amp;#34;github.</description></item><item><title>Client-Optionen</title><link>https://go-mail.dev/de/reference/client/options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/de/reference/client/options/</guid><description>Option WithDebugLog() WithDSN() WithDSNMailReturnType() WithDSNRcptNotifyType() WithHELO() Option Signature 1 type Option func(*Client) error Client Option sind Funktionen, die als optionale Argumente für die NewClient() Methoden verwendet werden können, um die Standardeinstellungen des zurückgegebenen Client zu überschreiben.
WithDebugLog() Signature 1 func WithDebugLog() Option Example 1 2 3 4 5 6 7 8 9 10 package main import &amp;#34;github.com/wneessen/go-mail&amp;#34; func main() { c, err := mail.NewClient(&amp;#34;mail.example.com&amp;#34;, mail.WithDebugLog()) if err != nil { panic(err) } } Version Eingeführt in go-mail v0.</description></item><item><title>Community-Leitfaden</title><link>https://go-mail.dev/de/community/guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/de/community/guide/</guid><description>Die go-mail-Community wächst und wenn Du dies liest, stehen die Chancen gut, dass Du auch mitmachen willst!
Ressourcen Verhaltenskodex Support- und Ankündigungskanäle Mitwirken Entwicklung neuer Funktionen Fehler beheben Testen Dokumentation Übersetzungen Unterstützen Ressourcen Verhaltenskodex In unserer Community folgen wir dem Verhaltenskodex und verlangen von jedem, der Teilnehmen möchte, sich ebenso zu verhalten.
Support- und Ankündigungskanäle Mastodon: Folge uns auf Mastodon, um aktuelle Nachrichten über go-mail zu erhalten go-mail Forum: Erhalte Ankündigungen und starte Diskussionen über go-mail.</description></item><item><title>Einfaches Mailer-Beispiel</title><link>https://go-mail.dev/de/examples/simple-mailer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/de/examples/simple-mailer/</guid><description>Dieses Beispiel ist der simpelste Code, der erforderlich ist, um eine E-Mail mit go-mail erfolgreich zu versenden.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 package main import ( &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; &amp;#34;github.com/wneessen/go-mail&amp;#34; ) func main() { msg := mail.NewMsg() if err := msg.From(&amp;#34;toni@tester.com&amp;#34;); err != nil { log.</description></item><item><title>Sicherheitsrichtlinie</title><link>https://go-mail.dev/de/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/de/security/</guid><description>Bekannte Schwachstellen Auch wenn es keine bekannte Sicherheitslücke in go-mail gibt, kannst du jederzeit auf der Sicherheitshinweise Seite von unseres GitHub-Projekts.
Eine Sicherheitslücke melden Um (mögliche) Sicherheitsprobleme in go-mail zu melden, sende bitte entweder eine Mail an security@go-mail.dev oder nutze die Github private Meldefunktion. Meldungen sind immer willkommen. Auch wenn du dir nicht 100%ig sicher bist, dass ein bestimmtes Problem, das du als Sicherheitsproblem einzustufen ist, würden wir gerne die Details hören, damit wir gemeinsam herausfinden können, ob das betreffende Problem behoben werden muss.</description></item></channel></rss>