<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to the go-mail documentation on go-mail</title><link>https://go-mail.dev/</link><description>Recent content in Welcome to the go-mail documentation on go-mail</description><generator>Hugo</generator><language>en</language><atom:link href="https://go-mail.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://go-mail.dev/getting-started/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/getting-started/introduction/</guid><description>&lt;p>This short tutorial shows you how to get up and running with go-mail from installation to sending your first
mail.&lt;/p></description></item><item><title>Bulk Mailer Example</title><link>https://go-mail.dev/examples/bulk-mailer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/examples/bulk-mailer/</guid><description>In this example we create a small bulk mailer for sending out the same mail to a bigger list of recipients. It is important for us to address the recipient directly in the mail, therefore we will make use of Go&amp;rsquo;s html/template and text/template system together with placeholders.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 package main import ( &amp;#34;fmt&amp;#34; ht &amp;#34;html/template&amp;#34; &amp;#34;log&amp;#34; &amp;#34;math/rand&amp;#34; &amp;#34;os&amp;#34; tt &amp;#34;text/template&amp;#34; &amp;#34;time&amp;#34; &amp;#34;github.</description></item><item><title>Client options</title><link>https://go-mail.dev/reference/client/options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/reference/client/options/</guid><description>Option WithDebugLog() WithDSN() WithDSNMailReturnType() WithDSNRcptNotifyType() WithHELO() Option Signature 1 type Option func(*Client) error Client Option are functions that can be used as optional arguments for the NewClient() methods to override the default vaules of the returned Client.
WithDebugLog() Signature 1 func WithDebugLog() Option Example 1 2 3 4 5 6 7 8 9 10 package main import &amp;#34;github.com/wneessen/go-mail&amp;#34; func main() { c, err := mail.NewClient(&amp;#34;mail.example.com&amp;#34;, mail.WithDebugLog()) if err != nil { panic(err) } } Version Introduced in go-mail v0.</description></item><item><title>Community Guide</title><link>https://go-mail.dev/community/guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/community/guide/</guid><description>The go-mail community is growing and if you&amp;rsquo;re reading this, chances are that you want to join, too!
Resources Code of Conduct Support- and annoucement channels Contributing Developing New Features Fixing bugs Testing Documentation Translation Support Resources Code of Conduct In our community, we follow our Code of Conduct and ask everybody who likes to participate to act accordingly.
Support- and annoucement channels Mastodon: Follow us on Mastodon to receive recent news about go-mail go-mail forum: Receive announcements and start discussions about go-mail.</description></item><item><title>Merchandising</title><link>https://go-mail.dev/community/merch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/community/merch/</guid><description>Thanks to our wonderful friends at HelloTux we can offer great go-mail merchandising. All merch articles are embroidery to provide the best and most long-lasting quality possible.
If you want to support the open source community and represent your favourite Go mail library with some cool drip, check out our merch shop at: https://www.hellotux.com/go-mail.</description></item><item><title>Security policy</title><link>https://go-mail.dev/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/security/</guid><description>Known vulnerabilities Even though there is no known security vulnerability in go-mail, you can always check the security advisories page of our GitHub project.
Reporting a Vulnerability To report (possible) security issues in go-mail, please either send a mail to security@go-mail.dev or use Github&amp;rsquo;s private reporting feature. Reports are always welcome. Even if you are not 100% certain that a specific issue you found counts as a security issue, we&amp;rsquo;d love to hear the details, so we can figure out together if the issue in question needds to be addressed.</description></item><item><title>Simple Mailer Example</title><link>https://go-mail.dev/examples/simple-mailer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/examples/simple-mailer/</guid><description>This example is the most simple piece of code that is required to successfully send a mail with go-mail.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 package main import ( &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; &amp;#34;github.com/wneessen/go-mail&amp;#34; ) func main() { msg := mail.NewMsg() if err := msg.From(&amp;#34;toni@tester.com&amp;#34;); err !</description></item></channel></rss>