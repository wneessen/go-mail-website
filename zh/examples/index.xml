<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Examples on go-mail</title><link>https://go-mail.dev/zh/examples/</link><description>Recent content in Examples on go-mail</description><generator>Hugo -- gohugo.io</generator><language>zh</language><atom:link href="https://go-mail.dev/zh/examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Simple Mailer Example</title><link>https://go-mail.dev/zh/examples/simple-mailer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/zh/examples/simple-mailer/</guid><description>This example is the most simple piece of code that is required to successfully send a mail with go-mail.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 package main import ( &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; &amp;#34;github.com/wneessen/go-mail&amp;#34; ) func main() { msg := mail.NewMsg() if err := msg.From(&amp;#34;toni@tester.com&amp;#34;); err !</description></item><item><title>批量邮件示例</title><link>https://go-mail.dev/zh/examples/bulk-mailer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-mail.dev/zh/examples/bulk-mailer/</guid><description>在这个示例中，我们创建了一个小型的批量邮件发送程序，可以将相同的邮件发送给更多的收件人。 对于我们来说，重要的是直接在邮件中寻址收件人，因此我们将使用Go的html/template和text/template系统以及占位符。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 package main import ( &amp;#34;fmt&amp;#34; ht &amp;#34;html/template&amp;#34; &amp;#34;log&amp;#34; &amp;#34;math/rand&amp;#34; &amp;#34;os&amp;#34; tt &amp;#34;text/template&amp;#34; &amp;#34;time&amp;#34; &amp;#34;github.</description></item></channel></rss>